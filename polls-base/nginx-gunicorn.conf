# Nginx configuration for gunicorn

upstream app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response

    # for UNIX domain socket setups
    #server unix:/tmp/gunicorn.sock fail_timeout=0;

    # for a TCP configuration
    server 127.0.0.1:8000 fail_timeout=0;
}

server {
    listen                 80 default_server;
    listen                 [::]:80 default_server;
    server_name             _;
    return 301              https://$host$request_uri;
}

server {

    listen                  443 ssl;
    server_name             polls.ampervue.net;

    ssl_certificate         /etc/nginx/cert.crt;
    ssl_certificate_key     /etc/nginx/cert.key;

    ssl_session_cache       builtin:1000  shared:SSL:10m;
    ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers             HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;

    # Path to statics
    root                    /var/app/static;

    location / {
        # checks for static file, if not found proxy to app
        try_files           $uri @proxy_to_app;
    }
 

    location @proxy_to_app {
        # Setting up proxy to forward all data to the application
        proxy_pass          http://app_server;

        # The X-Forwarded-For header shows the full chain of servers which have proxied 
        # the packet, which could be multiple forward proxies. 
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        # This is why we also have X-Real-IP, so that we ensure we have 
        # the real IP address of the client.
        proxy_set_header        X-Real-IP $remote_addr;
        # This allows the upstream server to be name-based and can allow multiple hosts 
        # (that is, multiple websites) to be proxied under one configuration or one server.
        proxy_set_header        Host $host;
        # Because we are terminating https
        proxy_set_header        X-Forwarded-Proto $scheme;

        proxy_read_timeout  90;
    }
}
